{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-02T10:00:46.704Z",
    "end": "2024-07-02T10:00:48.226Z",
    "duration": 1522,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b1174814-c686-4170-bf27-2f4fbf25ae54",
      "title": "",
      "fullFile": "cypress/e2e/PostCalls.cy.js",
      "file": "cypress/e2e/PostCalls.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cd0cdccc-b6b7-4721-8caa-0e387d5413ae",
          "title": "Approach1 - Hard coded values",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Approach1",
              "fullTitle": "Approach1 - Hard coded values Approach1",
              "timedOut": null,
              "duration": 675,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  name: \"morpheus\",\n  job: \"leader\"\n};\ncy.request({\n  method: \"POST\",\n  url: \"https://reqres.in/api/users/\",\n  body: requestBody\n}).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body.name).to.eq(\"morpheus\");\n  expect(response.body.job).to.eq(\"leader\");\n});",
              "err": {},
              "uuid": "7e0b1b30-874c-4544-b133-f17ba83e71f7",
              "parentUUID": "cd0cdccc-b6b7-4721-8caa-0e387d5413ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e0b1b30-874c-4544-b133-f17ba83e71f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 675,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4f4ae779-51a5-48e0-913c-eba1f7caf578",
          "title": "Approach 2 - Dynamically generating JSON object",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Approach2",
              "fullTitle": "Approach 2 - Dynamically generating JSON object Approach2",
              "timedOut": null,
              "duration": 358,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  name: Math.random().toString(5).substring(2),\n  job: \"Engineer\"\n};\ncy.request({\n  method: \"POST\",\n  url: \"https://reqres.in/api/users/\",\n  body: requestBody\n}).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body.name).to.eq(requestBody.name);\n  expect(response.body.job).to.eq(requestBody.job);\n});",
              "err": {},
              "uuid": "be3cd05c-e129-45c2-ae45-632b2dca963c",
              "parentUUID": "4f4ae779-51a5-48e0-913c-eba1f7caf578",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be3cd05c-e129-45c2-ae45-632b2dca963c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 358,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5c97af13-40e0-4010-a9ad-9917c9115f91",
          "title": "Approach 3 - Using fixture",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Approach3- Fixtures",
              "fullTitle": "Approach 3 - Using fixture Approach3- Fixtures",
              "timedOut": null,
              "duration": 421,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"Test\").then(data => {\n  const requestBody = data;\n  cy.request({\n    method: \"POST\",\n    url: \"https://reqres.in/api/users/\",\n    body: requestBody\n  }).then(response => {\n    expect(response.status).to.eq(201);\n    expect(response.body.name).to.eq(requestBody.name);\n    expect(response.body.job).to.eq(requestBody.job);\n  });\n});",
              "err": {},
              "uuid": "b78396d2-e4d1-4e1d-b14e-1c050a3383fb",
              "parentUUID": "5c97af13-40e0-4010-a9ad-9917c9115f91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b78396d2-e4d1-4e1d-b14e-1c050a3383fb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 421,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}