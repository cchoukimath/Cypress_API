{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-04T13:29:43.004Z",
    "end": "2024-07-04T13:29:44.315Z",
    "duration": 1311,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "36119216-47f7-4f4a-a557-fde5f6f9c2d7",
      "title": "",
      "fullFile": "cypress/e2e/PostCalls.cy.js",
      "file": "cypress/e2e/PostCalls.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a38b2f06-1a62-4d67-94f2-74e8a0673828",
          "title": "Approach1 - Hard coded values",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Approach1",
              "fullTitle": "Approach1 - Hard coded values Approach1",
              "timedOut": null,
              "duration": 401,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  name: \"morpheus\",\n  job: \"leader\"\n};\ncy.request({\n  method: \"POST\",\n  url: \"https://reqres.in/api/users/\",\n  body: requestBody\n}).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body.name).to.eq(\"morpheus\");\n  expect(response.body.job).to.eq(\"leader\");\n});",
              "err": {},
              "uuid": "351a9d7a-2db5-43da-bd81-8f02c581d718",
              "parentUUID": "a38b2f06-1a62-4d67-94f2-74e8a0673828",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "351a9d7a-2db5-43da-bd81-8f02c581d718"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 401,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2c091550-6589-43b0-9647-a8b337acc155",
          "title": "Approach 2 - Dynamically generating JSON object",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Approach2",
              "fullTitle": "Approach 2 - Dynamically generating JSON object Approach2",
              "timedOut": null,
              "duration": 439,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const requestBody = {\n  name: Math.random().toString(5).substring(2),\n  job: \"Engineer\"\n};\ncy.request({\n  method: \"POST\",\n  url: \"https://reqres.in/api/users/\",\n  body: requestBody\n}).then(response => {\n  expect(response.status).to.eq(201);\n  expect(response.body.name).to.eq(requestBody.name);\n  expect(response.body.job).to.eq(requestBody.job);\n});",
              "err": {},
              "uuid": "3d703792-9874-4dfa-94b8-f8b6da188b7c",
              "parentUUID": "2c091550-6589-43b0-9647-a8b337acc155",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d703792-9874-4dfa-94b8-f8b6da188b7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 439,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bd9b234b-1d4f-4c00-a562-0b8c0740bb84",
          "title": "Approach 3 - Using fixture",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Approach3- Fixtures",
              "fullTitle": "Approach 3 - Using fixture Approach3- Fixtures",
              "timedOut": null,
              "duration": 398,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"Test\").then(data => {\n  const requestBody = data;\n  cy.request({\n    method: \"POST\",\n    url: \"https://reqres.in/api/users/\",\n    body: requestBody\n  }).then(response => {\n    expect(response.status).to.eq(201);\n    expect(response.body.name).to.eq(requestBody.name);\n    expect(response.body.job).to.eq(requestBody.job);\n  });\n});",
              "err": {},
              "uuid": "b822c4cd-45d5-46c2-ad5d-93486d6f61c7",
              "parentUUID": "bd9b234b-1d4f-4c00-a562-0b8c0740bb84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b822c4cd-45d5-46c2-ad5d-93486d6f61c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 398,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}